plugins {
    id("io.ebean") version "13.15.0"
}

// Resolve dependencies for LWJGL
import org.gradle.internal.os.OperatingSystem
project.ext.lwjglVersion = "3.3.1"
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

repositories {
    maven {
        url = "https://papermc.io/repo/repository/maven-public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
    implementation 'org.xerial:sqlite-jdbc:[3.41.0.0, )'
    implementation 'mysql:mysql-connector-java:[8.0.23, )'
    implementation 'com.h2database:h2:[2.1.214, )'
    implementation 'org.postgresql:postgresql:[42.6.0, )'

    implementation 'org.apache.commons:commons-lang3:[3.12.0, )'
    implementation 'me.carleslc.Simple-YAML:Simple-Yaml:[1.7.2, )'
    implementation 'com.google.guava:guava:[31.1-jre, )'

    implementation 'net.dv8tion:JDA:4.4.1_353'
    implementation 'club.minnced:discord-webhooks:[0.8.2, )'

    implementation 'io.ebean:ebean-core:[13.15.0, )'
    implementation 'io.ebean:ebean:[13.15.0, )'
    implementation 'io.ebean:ebean-migration:[13.7.0, )'
    implementation 'io.ebean:ebean-ddl-generator:[13.15.0, )'
    annotationProcessor 'io.ebean:querybean-generator:[13.15.0, )'

    implementation 'org.slf4j:slf4j-simple:[2.0.7, )'

    // Needed for db migration
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // LWJGL (Avatar generation)
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

task createMigration(type: JavaExec) {
    group = 'Execution'
    description = 'Create a migration using current model data'
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.github.riku32.discordlink.core.GenerateDbMigration'
}